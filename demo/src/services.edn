{:modular (modular.system/modular-env)
 :components
 {:config {:start (modular.config/load-config! (:config #ref [:modular]))}
  ;:web {:start (telegram.webserver/run-webserver nil)}
  :telegram {:start (telegram.service/telegram-bot-start
                     (:telegram (deref (clip/ref :config)))
                     {:commands [; md/html/foto from file/url
                                 {:command "wink" :description "html format demo" :rpc-fn demo/wink}
                                 {:command "md1" :description "markdown1" :rpc-fn demo/md1}
                                 ; image
                                 {:command "moon" :description "moon photo" :rpc-fn demo/moon}
                                 ; generated table
                                 {:command "tablemds" :description "table md small" :rpc-fn demo/table-md-small}
                                 {:command "tablemdb" :description "table md big" :rpc-fn demo/table-md-big}
                                 {:command "tablehtmls" :description "table html small" :rpc-fn demo/table-html-small}
                                 {:command "tablehtmlb" :description "table html big" :rpc-fn demo/table-html-big}
                                 ;
                                 {:command "timezone" :description "set time"
                                  :rpc-fn demo/timezone
                                  :opts [{:title "timezone" :options ["UTC" "EST" "Panama"]}]}
                                 {:command "app" :description "web app" :rpc-fn demo/app}
                                 ; keyboard
                                 {:command "dialog1" :description "full keyboard" :rpc-fn demo/dialog1}
                                 {:command "dialog2" :description "inline keyboard" :rpc-fn demo/dialog2}
                                 ; publish & subscribe
                                 {:command "subscribe" :description "subscribe topic"
                                  :rpc-fn telegram.pubsub/subscribe
                                  :opts [{:title "topic" :options ["marketdata" "entries" "exits"]}]}
                                 {:command "unsubscribe" :description "unsubscribe topic"
                                  :rpc-fn telegram.pubsub/unsubscribe
                                  :opts [{:title "topic" :options ["marketdata" "entries" "exits"]}]}
                                 {:command "subscriptions" :description "current subscriptions"
                                  :rpc-fn telegram.pubsub/my-subscriptions}]})}
  :demo {:start (demo/telegram-demo (clip/ref :telegram))}
  :data-publisher {:start (demo/start-data-pusher (clip/ref :telegram))}
  :nrepl {:start (nrepl.server/start-server
                  :bind "0.0.0.0"
                  :port 9100
                  :middleware cider.nrepl.middleware/cider-middleware
                  :handler cider.nrepl/cider-nrepl-handler)
          :stop (.close this)}}}
  
